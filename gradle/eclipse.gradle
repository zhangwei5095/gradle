allprojects {
    apply plugin: 'eclipse'

    plugins.withType(JavaPlugin) {
        eclipse {
            classpath {
                file.whenMerged { classpath ->
                    //There are classes in here not designed to be compiled, but just used in our testing
                    classpath.entries.removeAll { it.path.contains('src/integTest/resources') }
                    //Workaround for some projects referring to themselves as dependent projects
                    classpath.entries.removeAll { it.path.contains("$project.name") && it.kind=='src' }
                    // Remove references to libraries in the build folder
                    classpath.entries.removeAll { it.path.contains("$project.name/build") && it.kind=='lib' }
                    // Remove references to other project's binaries
                    classpath.entries.removeAll { it.path.contains("/subprojects") && it.kind == 'lib' }
                }
            }
            jdt {
                javaRuntimeName = 'JavaSE-1.7'
                file.withProperties { properties ->
                    // Eclipse's view of projects treat circular dependencies as errors by default
                    properties["org.eclipse.jdt.core.circularClasspath"] = "warning"
                }
            }
        }
    }
}
