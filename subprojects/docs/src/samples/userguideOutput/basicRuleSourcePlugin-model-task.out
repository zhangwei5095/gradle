:model

------------------------------------------------------------
Root project
------------------------------------------------------------

+ person
      | Type:   	Person
      | Creator: 	PersonRules#person(Person)
      | Rules:
         ⤷ person { ... } @ build.gradle line 59, column 3
         ⤷ PersonRules#setFirstName(Person)
    + age
          | Type:   	int
          | Value:  	0
          | Creator: 	PersonRules#person(Person)
    + children
          | Type:   	org.gradle.model.ModelSet<Person>
          | Creator: 	PersonRules#person(Person)
    + employed
          | Type:   	boolean
          | Value:  	false
          | Creator: 	PersonRules#person(Person)
    + father
          | Type:   	Person
          | Value:  	null
          | Creator: 	PersonRules#person(Person)
    + firstName
          | Type:   	java.lang.String
          | Value:  	John
          | Creator: 	PersonRules#person(Person)
    + homeDirectory
          | Type:   	java.io.File
          | Value:  	null
          | Creator: 	PersonRules#person(Person)
    + id
          | Type:   	java.lang.Long
          | Value:  	null
          | Creator: 	PersonRules#person(Person)
    + lastName
          | Type:   	java.lang.String
          | Value:  	Smith
          | Creator: 	PersonRules#person(Person)
    + maritalStatus
          | Type:   	MaritalStatus
          | Creator: 	PersonRules#person(Person)
    + mother
          | Type:   	Person
          | Value:  	null
          | Creator: 	PersonRules#person(Person)
    + userGroups
          | Type:   	java.util.List<java.lang.String>
          | Value:  	null
          | Creator: 	PersonRules#person(Person)
+ tasks
      | Type:   	org.gradle.model.ModelMap<org.gradle.api.Task>
      | Creator: 	Project.<init>.tasks()
      | Rules:
         ⤷ PersonRules#createHelloTask(ModelMap<Task>, Person)
    + buildEnvironment
          | Type:   	org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask
          | Value:  	task ':buildEnvironment'
          | Creator: 	tasks.addPlaceholderAction(buildEnvironment)
          | Rules:
             ⤷ copyToTaskContainer
    + components
          | Type:   	org.gradle.api.reporting.components.ComponentReport
          | Value:  	task ':components'
          | Creator: 	tasks.addPlaceholderAction(components)
          | Rules:
             ⤷ copyToTaskContainer
    + dependencies
          | Type:   	org.gradle.api.tasks.diagnostics.DependencyReportTask
          | Value:  	task ':dependencies'
          | Creator: 	tasks.addPlaceholderAction(dependencies)
          | Rules:
             ⤷ copyToTaskContainer
    + dependencyInsight
          | Type:   	org.gradle.api.tasks.diagnostics.DependencyInsightReportTask
          | Value:  	task ':dependencyInsight'
          | Creator: 	tasks.addPlaceholderAction(dependencyInsight)
          | Rules:
             ⤷ HelpTasksPlugin.Rules#addDefaultDependenciesReportConfiguration(DependencyInsightReportTask, ServiceRegistry)
             ⤷ copyToTaskContainer
    + hello
          | Type:   	org.gradle.api.Task
          | Value:  	task ':hello'
          | Creator: 	PersonRules#createHelloTask(ModelMap<Task>, Person) > create(hello)
          | Rules:
             ⤷ copyToTaskContainer
    + help
          | Type:   	org.gradle.configuration.Help
          | Value:  	task ':help'
          | Creator: 	tasks.addPlaceholderAction(help)
          | Rules:
             ⤷ copyToTaskContainer
    + init
          | Type:   	org.gradle.buildinit.tasks.InitBuild
          | Value:  	task ':init'
          | Creator: 	tasks.addPlaceholderAction(init)
          | Rules:
             ⤷ copyToTaskContainer
    + model
          | Type:   	org.gradle.api.reporting.model.ModelReport
          | Value:  	task ':model'
          | Creator: 	tasks.addPlaceholderAction(model)
          | Rules:
             ⤷ copyToTaskContainer
    + projects
          | Type:   	org.gradle.api.tasks.diagnostics.ProjectReportTask
          | Value:  	task ':projects'
          | Creator: 	tasks.addPlaceholderAction(projects)
          | Rules:
             ⤷ copyToTaskContainer
    + properties
          | Type:   	org.gradle.api.tasks.diagnostics.PropertyReportTask
          | Value:  	task ':properties'
          | Creator: 	tasks.addPlaceholderAction(properties)
          | Rules:
             ⤷ copyToTaskContainer
    + tasks
          | Type:   	org.gradle.api.tasks.diagnostics.TaskReportTask
          | Value:  	task ':tasks'
          | Creator: 	tasks.addPlaceholderAction(tasks)
          | Rules:
             ⤷ copyToTaskContainer
    + wrapper
          | Type:   	org.gradle.api.tasks.wrapper.Wrapper
          | Value:  	task ':wrapper'
          | Creator: 	tasks.addPlaceholderAction(wrapper)
          | Rules:
             ⤷ copyToTaskContainer
